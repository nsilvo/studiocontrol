@@ function initWebSocket() {
-    ws.onopen = () => {
-      console.log('[remote] WS connected');
-      statusSpan.textContent = 'Connected (WS)';
-      // Send join with displayName
-      ws.send(
-        JSON.stringify({
-          type: 'join',
-          role: 'remote',
-          name: displayName,
-        })
-      );
-    };
+    ws.onopen = () => {
+      console.log('[remote] WS connected');
+      statusSpan.textContent = 'Connected (WS)';
+      // Send join with displayName
+      ws.send(
+        JSON.stringify({
+          type: 'join',
+          role: 'remote',
+          name: displayName,
+        })
+      );
+      // Start sending keepalives every 30 seconds
+      startKeepalive();
+    };

@@ function initWebSocket() {
-    ws.onclose = () => {
-      console.warn('[remote] WS closed. Reconnecting in 5 seconds...');
-      statusSpan.textContent = 'Disconnected (WS)';
-      setTimeout(initWebSocket, 5000);
-      if (pc) {
-        pc.close();
-        pc = null;
-      }
-      // Reset tone state
-      if (isTone) {
-        stopGlitsTone();
-        isTone = false;
-        toneBtn.textContent = 'Send GLITS Tone';
-        toneBtn.disabled = true;
-      }
-    };
+    ws.onclose = () => {
+      console.warn('[remote] WS closed. Reconnecting in 5 seconds...');
+      statusSpan.textContent = 'Disconnected (WS)';
+      stopKeepalive();
+      setTimeout(initWebSocket, 5000);
+      if (pc) {
+        pc.close();
+        pc = null;
+      }
+      // Reset tone state
+      if (isTone) {
+        stopGlitsTone();
+        isTone = false;
+        toneBtn.textContent = 'Send GLITS Tone';
+        toneBtn.disabled = true;
+      }
+    };

  // ────────────────────────────────────────────────────────────────────────
  // +++ KEEPALIVE LOGIC +++
  let keepaliveIntervalId = null;
  function startKeepalive() {
    if (keepaliveIntervalId) return;
    keepaliveIntervalId = setInterval(() => {
      if (ws && ws.readyState === WebSocket.OPEN) {
        ws.send(JSON.stringify({ type: 'keepalive' }));
      }
    }, 30000); // every 30s
  }
  function stopKeepalive() {
    if (keepaliveIntervalId) {
      clearInterval(keepaliveIntervalId);
      keepaliveIntervalId = null;
    }
  }
  // ────────────────────────────────────────────────────────────────────────

